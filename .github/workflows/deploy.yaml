name: Deploy
on: 
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      
      - name: Install node
        uses: actions/setup-node@v3

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Lint
        id: test
        run: npm run test
      - name: test report
        if: failure() && steps.test.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json


  test:
    needs: [ lint ]
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.filename.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install node
        uses: actions/setup-node@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Publish js file name
        id: filename
        run: |
          echo "script-file=index" >> $GITHUB_OUTPUT
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: |
            dist
            package.json
  deploy:
    needs: test 
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install node
        uses: actions/setup-node@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: get artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Output file name
        run: echo "${{ needs.test.outputs.script-file }}"
      - name: Deploy
        run: echo "deploy "
  report:
    needs: [ lint, test, deploy]
    if: failure() 
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: echo "report time !!"
